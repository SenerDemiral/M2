// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/rest.proto
// </auto-generated>
// Original file comments:
// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Rest {
  /// <summary>
  /// The CRUDs service definition.
  /// </summary>
  public static partial class CRUDs
  {
    static readonly string __ServiceName = "rest.CRUDs";

    static readonly grpc::Marshaller<global::Rest.QryProxy> __Marshaller_QryProxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.QryProxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.TblaProxy> __Marshaller_TblaProxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.TblaProxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.AHPproxy> __Marshaller_AHPproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.AHPproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.AFBproxy> __Marshaller_AFBproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.AFBproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.PKproxy> __Marshaller_PKproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.PKproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.AFDproxy> __Marshaller_AFDproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.AFDproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.ABBproxy> __Marshaller_ABBproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.ABBproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.ABDproxy> __Marshaller_ABDproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.ABDproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.XGTproxy> __Marshaller_XGTproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.XGTproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.XDKproxy> __Marshaller_XDKproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.XDKproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.UUUproxy> __Marshaller_UUUproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.UUUproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.UYTproxy> __Marshaller_UYTproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.UYTproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.UYHproxy> __Marshaller_UYHproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.UYHproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.NNNproxy> __Marshaller_NNNproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.NNNproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.NeTreeProxy> __Marshaller_NeTreeProxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.NeTreeProxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.KidsInParentsProxy> __Marshaller_KidsInParentsProxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.KidsInParentsProxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.NodesInParentsProxy> __Marshaller_NodesInParentsProxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.NodesInParentsProxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.KKKproxy> __Marshaller_KKKproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.KKKproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.KFTproxy> __Marshaller_KFTproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.KFTproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.KPTproxy> __Marshaller_KPTproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.KPTproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.KDTproxy> __Marshaller_KDTproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.KDTproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.QryBRproxy> __Marshaller_QryBRproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.QryBRproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.BRproxy> __Marshaller_BRproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.BRproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.QryPproxy> __Marshaller_QryPproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.QryPproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.ToKPTproxy> __Marshaller_ToKPTproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.ToKPTproxy.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Rest.ToKDTproxy> __Marshaller_ToKDTproxy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Rest.ToKDTproxy.Parser.ParseFrom);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.TblaProxy> __Method_TblaFill = new grpc::Method<global::Rest.QryProxy, global::Rest.TblaProxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "TblaFill",
        __Marshaller_QryProxy,
        __Marshaller_TblaProxy);

    static readonly grpc::Method<global::Rest.TblaProxy, global::Rest.TblaProxy> __Method_TblaUpdate = new grpc::Method<global::Rest.TblaProxy, global::Rest.TblaProxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TblaUpdate",
        __Marshaller_TblaProxy,
        __Marshaller_TblaProxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.AHPproxy> __Method_AHPfill = new grpc::Method<global::Rest.QryProxy, global::Rest.AHPproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "AHPfill",
        __Marshaller_QryProxy,
        __Marshaller_AHPproxy);

    static readonly grpc::Method<global::Rest.AHPproxy, global::Rest.AHPproxy> __Method_AHPupdate = new grpc::Method<global::Rest.AHPproxy, global::Rest.AHPproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AHPupdate",
        __Marshaller_AHPproxy,
        __Marshaller_AHPproxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.AFBproxy> __Method_AFBfill = new grpc::Method<global::Rest.QryProxy, global::Rest.AFBproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "AFBfill",
        __Marshaller_QryProxy,
        __Marshaller_AFBproxy);

    static readonly grpc::Method<global::Rest.AFBproxy, global::Rest.AFBproxy> __Method_AFBupdate = new grpc::Method<global::Rest.AFBproxy, global::Rest.AFBproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AFBupdate",
        __Marshaller_AFBproxy,
        __Marshaller_AFBproxy);

    static readonly grpc::Method<global::Rest.PKproxy, global::Rest.AFBproxy> __Method_AFBgetByPK = new grpc::Method<global::Rest.PKproxy, global::Rest.AFBproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AFBgetByPK",
        __Marshaller_PKproxy,
        __Marshaller_AFBproxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.AFDproxy> __Method_AFDfill = new grpc::Method<global::Rest.QryProxy, global::Rest.AFDproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "AFDfill",
        __Marshaller_QryProxy,
        __Marshaller_AFDproxy);

    static readonly grpc::Method<global::Rest.AFDproxy, global::Rest.AFDproxy> __Method_AFDupdate = new grpc::Method<global::Rest.AFDproxy, global::Rest.AFDproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AFDupdate",
        __Marshaller_AFDproxy,
        __Marshaller_AFDproxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.ABBproxy> __Method_ABBfill = new grpc::Method<global::Rest.QryProxy, global::Rest.ABBproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ABBfill",
        __Marshaller_QryProxy,
        __Marshaller_ABBproxy);

    static readonly grpc::Method<global::Rest.ABBproxy, global::Rest.ABBproxy> __Method_ABBupdate = new grpc::Method<global::Rest.ABBproxy, global::Rest.ABBproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ABBupdate",
        __Marshaller_ABBproxy,
        __Marshaller_ABBproxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.ABDproxy> __Method_ABDfill = new grpc::Method<global::Rest.QryProxy, global::Rest.ABDproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ABDfill",
        __Marshaller_QryProxy,
        __Marshaller_ABDproxy);

    static readonly grpc::Method<global::Rest.ABDproxy, global::Rest.ABDproxy> __Method_ABDupdate = new grpc::Method<global::Rest.ABDproxy, global::Rest.ABDproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ABDupdate",
        __Marshaller_ABDproxy,
        __Marshaller_ABDproxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.XGTproxy> __Method_XGTfill = new grpc::Method<global::Rest.QryProxy, global::Rest.XGTproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "XGTfill",
        __Marshaller_QryProxy,
        __Marshaller_XGTproxy);

    static readonly grpc::Method<global::Rest.XGTproxy, global::Rest.XGTproxy> __Method_XGTupdate = new grpc::Method<global::Rest.XGTproxy, global::Rest.XGTproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "XGTupdate",
        __Marshaller_XGTproxy,
        __Marshaller_XGTproxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.XDKproxy> __Method_XDKfill = new grpc::Method<global::Rest.QryProxy, global::Rest.XDKproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "XDKfill",
        __Marshaller_QryProxy,
        __Marshaller_XDKproxy);

    static readonly grpc::Method<global::Rest.XDKproxy, global::Rest.XDKproxy> __Method_XDKupdate = new grpc::Method<global::Rest.XDKproxy, global::Rest.XDKproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "XDKupdate",
        __Marshaller_XDKproxy,
        __Marshaller_XDKproxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.UUUproxy> __Method_UUUfill = new grpc::Method<global::Rest.QryProxy, global::Rest.UUUproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "UUUfill",
        __Marshaller_QryProxy,
        __Marshaller_UUUproxy);

    static readonly grpc::Method<global::Rest.UUUproxy, global::Rest.UUUproxy> __Method_UUUupdate = new grpc::Method<global::Rest.UUUproxy, global::Rest.UUUproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UUUupdate",
        __Marshaller_UUUproxy,
        __Marshaller_UUUproxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.UYTproxy> __Method_UYTfill = new grpc::Method<global::Rest.QryProxy, global::Rest.UYTproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "UYTfill",
        __Marshaller_QryProxy,
        __Marshaller_UYTproxy);

    static readonly grpc::Method<global::Rest.UYTproxy, global::Rest.UYTproxy> __Method_UYTupdate = new grpc::Method<global::Rest.UYTproxy, global::Rest.UYTproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UYTupdate",
        __Marshaller_UYTproxy,
        __Marshaller_UYTproxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.UYHproxy> __Method_UYHfill = new grpc::Method<global::Rest.QryProxy, global::Rest.UYHproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "UYHfill",
        __Marshaller_QryProxy,
        __Marshaller_UYHproxy);

    static readonly grpc::Method<global::Rest.UYHproxy, global::Rest.UYHproxy> __Method_UYHupdate = new grpc::Method<global::Rest.UYHproxy, global::Rest.UYHproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UYHupdate",
        __Marshaller_UYHproxy,
        __Marshaller_UYHproxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.NNNproxy> __Method_NNNfill = new grpc::Method<global::Rest.QryProxy, global::Rest.NNNproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "NNNfill",
        __Marshaller_QryProxy,
        __Marshaller_NNNproxy);

    static readonly grpc::Method<global::Rest.NNNproxy, global::Rest.NNNproxy> __Method_NNNupdate = new grpc::Method<global::Rest.NNNproxy, global::Rest.NNNproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "NNNupdate",
        __Marshaller_NNNproxy,
        __Marshaller_NNNproxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.NeTreeProxy> __Method_NeUpFill = new grpc::Method<global::Rest.QryProxy, global::Rest.NeTreeProxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "NeUpFill",
        __Marshaller_QryProxy,
        __Marshaller_NeTreeProxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.NeTreeProxy> __Method_NeDownFill = new grpc::Method<global::Rest.QryProxy, global::Rest.NeTreeProxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "NeDownFill",
        __Marshaller_QryProxy,
        __Marshaller_NeTreeProxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.KidsInParentsProxy> __Method_KidsInParentsFill = new grpc::Method<global::Rest.QryProxy, global::Rest.KidsInParentsProxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "KidsInParentsFill",
        __Marshaller_QryProxy,
        __Marshaller_KidsInParentsProxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.NodesInParentsProxy> __Method_NodesInParentsFill = new grpc::Method<global::Rest.QryProxy, global::Rest.NodesInParentsProxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "NodesInParentsFill",
        __Marshaller_QryProxy,
        __Marshaller_NodesInParentsProxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.KKKproxy> __Method_KKKfill = new grpc::Method<global::Rest.QryProxy, global::Rest.KKKproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "KKKfill",
        __Marshaller_QryProxy,
        __Marshaller_KKKproxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.KFTproxy> __Method_KFTfill = new grpc::Method<global::Rest.QryProxy, global::Rest.KFTproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "KFTfill",
        __Marshaller_QryProxy,
        __Marshaller_KFTproxy);

    static readonly grpc::Method<global::Rest.KFTproxy, global::Rest.KFTproxy> __Method_KFTupdate = new grpc::Method<global::Rest.KFTproxy, global::Rest.KFTproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "KFTupdate",
        __Marshaller_KFTproxy,
        __Marshaller_KFTproxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.KPTproxy> __Method_KPTfill = new grpc::Method<global::Rest.QryProxy, global::Rest.KPTproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "KPTfill",
        __Marshaller_QryProxy,
        __Marshaller_KPTproxy);

    static readonly grpc::Method<global::Rest.KPTproxy, global::Rest.KPTproxy> __Method_KPTupdate = new grpc::Method<global::Rest.KPTproxy, global::Rest.KPTproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "KPTupdate",
        __Marshaller_KPTproxy,
        __Marshaller_KPTproxy);

    static readonly grpc::Method<global::Rest.QryProxy, global::Rest.KDTproxy> __Method_KDTfill = new grpc::Method<global::Rest.QryProxy, global::Rest.KDTproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "KDTfill",
        __Marshaller_QryProxy,
        __Marshaller_KDTproxy);

    static readonly grpc::Method<global::Rest.KDTproxy, global::Rest.KDTproxy> __Method_KDTupdate = new grpc::Method<global::Rest.KDTproxy, global::Rest.KDTproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "KDTupdate",
        __Marshaller_KDTproxy,
        __Marshaller_KDTproxy);

    static readonly grpc::Method<global::Rest.QryBRproxy, global::Rest.BRproxy> __Method_BRfill = new grpc::Method<global::Rest.QryBRproxy, global::Rest.BRproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "BRfill",
        __Marshaller_QryBRproxy,
        __Marshaller_BRproxy);

    static readonly grpc::Method<global::Rest.BRproxy, global::Rest.BRproxy> __Method_BRupdate = new grpc::Method<global::Rest.BRproxy, global::Rest.BRproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BRupdate",
        __Marshaller_BRproxy,
        __Marshaller_BRproxy);

    static readonly grpc::Method<global::Rest.QryPproxy, global::Rest.ToKPTproxy> __Method_ToKPTfill = new grpc::Method<global::Rest.QryPproxy, global::Rest.ToKPTproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ToKPTfill",
        __Marshaller_QryPproxy,
        __Marshaller_ToKPTproxy);

    static readonly grpc::Method<global::Rest.ToKPTproxy, global::Rest.ToKPTproxy> __Method_ToKPTupdate = new grpc::Method<global::Rest.ToKPTproxy, global::Rest.ToKPTproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ToKPTupdate",
        __Marshaller_ToKPTproxy,
        __Marshaller_ToKPTproxy);

    static readonly grpc::Method<global::Rest.QryPproxy, global::Rest.ToKDTproxy> __Method_ToKDTfill = new grpc::Method<global::Rest.QryPproxy, global::Rest.ToKDTproxy>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ToKDTfill",
        __Marshaller_QryPproxy,
        __Marshaller_ToKDTproxy);

    static readonly grpc::Method<global::Rest.ToKDTproxy, global::Rest.ToKDTproxy> __Method_ToKDTupdate = new grpc::Method<global::Rest.ToKDTproxy, global::Rest.ToKDTproxy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ToKDTupdate",
        __Marshaller_ToKDTproxy,
        __Marshaller_ToKDTproxy);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Rest.RestReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CRUDs</summary>
    public abstract partial class CRUDsBase
    {
      public virtual global::System.Threading.Tasks.Task TblaFill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.TblaProxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.TblaProxy> TblaUpdate(global::Rest.TblaProxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task AHPfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.AHPproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.AHPproxy> AHPupdate(global::Rest.AHPproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task AFBfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.AFBproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.AFBproxy> AFBupdate(global::Rest.AFBproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.AFBproxy> AFBgetByPK(global::Rest.PKproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task AFDfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.AFDproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.AFDproxy> AFDupdate(global::Rest.AFDproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task ABBfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.ABBproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.ABBproxy> ABBupdate(global::Rest.ABBproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task ABDfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.ABDproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.ABDproxy> ABDupdate(global::Rest.ABDproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task XGTfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.XGTproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.XGTproxy> XGTupdate(global::Rest.XGTproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task XDKfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.XDKproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.XDKproxy> XDKupdate(global::Rest.XDKproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task UUUfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.UUUproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.UUUproxy> UUUupdate(global::Rest.UUUproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task UYTfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.UYTproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.UYTproxy> UYTupdate(global::Rest.UYTproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task UYHfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.UYHproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.UYHproxy> UYHupdate(global::Rest.UYHproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task NNNfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.NNNproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.NNNproxy> NNNupdate(global::Rest.NNNproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task NeUpFill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.NeTreeProxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task NeDownFill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.NeTreeProxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task KidsInParentsFill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.KidsInParentsProxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task NodesInParentsFill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.NodesInParentsProxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task KKKfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.KKKproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task KFTfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.KFTproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.KFTproxy> KFTupdate(global::Rest.KFTproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task KPTfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.KPTproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.KPTproxy> KPTupdate(global::Rest.KPTproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task KDTfill(global::Rest.QryProxy request, grpc::IServerStreamWriter<global::Rest.KDTproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.KDTproxy> KDTupdate(global::Rest.KDTproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task BRfill(global::Rest.QryBRproxy request, grpc::IServerStreamWriter<global::Rest.BRproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.BRproxy> BRupdate(global::Rest.BRproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task ToKPTfill(global::Rest.QryPproxy request, grpc::IServerStreamWriter<global::Rest.ToKPTproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.ToKPTproxy> ToKPTupdate(global::Rest.ToKPTproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task ToKDTfill(global::Rest.QryPproxy request, grpc::IServerStreamWriter<global::Rest.ToKDTproxy> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Rest.ToKDTproxy> ToKDTupdate(global::Rest.ToKDTproxy request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CRUDs</summary>
    public partial class CRUDsClient : grpc::ClientBase<CRUDsClient>
    {
      /// <summary>Creates a new client for CRUDs</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CRUDsClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CRUDs that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CRUDsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CRUDsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CRUDsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncServerStreamingCall<global::Rest.TblaProxy> TblaFill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TblaFill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.TblaProxy> TblaFill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_TblaFill, null, options, request);
      }
      public virtual global::Rest.TblaProxy TblaUpdate(global::Rest.TblaProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TblaUpdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.TblaProxy TblaUpdate(global::Rest.TblaProxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TblaUpdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.TblaProxy> TblaUpdateAsync(global::Rest.TblaProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TblaUpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.TblaProxy> TblaUpdateAsync(global::Rest.TblaProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TblaUpdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.AHPproxy> AHPfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AHPfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.AHPproxy> AHPfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_AHPfill, null, options, request);
      }
      public virtual global::Rest.AHPproxy AHPupdate(global::Rest.AHPproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AHPupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.AHPproxy AHPupdate(global::Rest.AHPproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AHPupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.AHPproxy> AHPupdateAsync(global::Rest.AHPproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AHPupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.AHPproxy> AHPupdateAsync(global::Rest.AHPproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AHPupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.AFBproxy> AFBfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AFBfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.AFBproxy> AFBfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_AFBfill, null, options, request);
      }
      public virtual global::Rest.AFBproxy AFBupdate(global::Rest.AFBproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AFBupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.AFBproxy AFBupdate(global::Rest.AFBproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AFBupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.AFBproxy> AFBupdateAsync(global::Rest.AFBproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AFBupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.AFBproxy> AFBupdateAsync(global::Rest.AFBproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AFBupdate, null, options, request);
      }
      public virtual global::Rest.AFBproxy AFBgetByPK(global::Rest.PKproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AFBgetByPK(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.AFBproxy AFBgetByPK(global::Rest.PKproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AFBgetByPK, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.AFBproxy> AFBgetByPKAsync(global::Rest.PKproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AFBgetByPKAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.AFBproxy> AFBgetByPKAsync(global::Rest.PKproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AFBgetByPK, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.AFDproxy> AFDfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AFDfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.AFDproxy> AFDfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_AFDfill, null, options, request);
      }
      public virtual global::Rest.AFDproxy AFDupdate(global::Rest.AFDproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AFDupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.AFDproxy AFDupdate(global::Rest.AFDproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AFDupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.AFDproxy> AFDupdateAsync(global::Rest.AFDproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AFDupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.AFDproxy> AFDupdateAsync(global::Rest.AFDproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AFDupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.ABBproxy> ABBfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ABBfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.ABBproxy> ABBfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ABBfill, null, options, request);
      }
      public virtual global::Rest.ABBproxy ABBupdate(global::Rest.ABBproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ABBupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.ABBproxy ABBupdate(global::Rest.ABBproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ABBupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.ABBproxy> ABBupdateAsync(global::Rest.ABBproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ABBupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.ABBproxy> ABBupdateAsync(global::Rest.ABBproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ABBupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.ABDproxy> ABDfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ABDfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.ABDproxy> ABDfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ABDfill, null, options, request);
      }
      public virtual global::Rest.ABDproxy ABDupdate(global::Rest.ABDproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ABDupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.ABDproxy ABDupdate(global::Rest.ABDproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ABDupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.ABDproxy> ABDupdateAsync(global::Rest.ABDproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ABDupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.ABDproxy> ABDupdateAsync(global::Rest.ABDproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ABDupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.XGTproxy> XGTfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return XGTfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.XGTproxy> XGTfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_XGTfill, null, options, request);
      }
      public virtual global::Rest.XGTproxy XGTupdate(global::Rest.XGTproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return XGTupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.XGTproxy XGTupdate(global::Rest.XGTproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_XGTupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.XGTproxy> XGTupdateAsync(global::Rest.XGTproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return XGTupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.XGTproxy> XGTupdateAsync(global::Rest.XGTproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_XGTupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.XDKproxy> XDKfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return XDKfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.XDKproxy> XDKfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_XDKfill, null, options, request);
      }
      public virtual global::Rest.XDKproxy XDKupdate(global::Rest.XDKproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return XDKupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.XDKproxy XDKupdate(global::Rest.XDKproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_XDKupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.XDKproxy> XDKupdateAsync(global::Rest.XDKproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return XDKupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.XDKproxy> XDKupdateAsync(global::Rest.XDKproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_XDKupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.UUUproxy> UUUfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UUUfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.UUUproxy> UUUfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_UUUfill, null, options, request);
      }
      public virtual global::Rest.UUUproxy UUUupdate(global::Rest.UUUproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UUUupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.UUUproxy UUUupdate(global::Rest.UUUproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UUUupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.UUUproxy> UUUupdateAsync(global::Rest.UUUproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UUUupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.UUUproxy> UUUupdateAsync(global::Rest.UUUproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UUUupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.UYTproxy> UYTfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UYTfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.UYTproxy> UYTfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_UYTfill, null, options, request);
      }
      public virtual global::Rest.UYTproxy UYTupdate(global::Rest.UYTproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UYTupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.UYTproxy UYTupdate(global::Rest.UYTproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UYTupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.UYTproxy> UYTupdateAsync(global::Rest.UYTproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UYTupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.UYTproxy> UYTupdateAsync(global::Rest.UYTproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UYTupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.UYHproxy> UYHfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UYHfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.UYHproxy> UYHfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_UYHfill, null, options, request);
      }
      public virtual global::Rest.UYHproxy UYHupdate(global::Rest.UYHproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UYHupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.UYHproxy UYHupdate(global::Rest.UYHproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UYHupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.UYHproxy> UYHupdateAsync(global::Rest.UYHproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UYHupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.UYHproxy> UYHupdateAsync(global::Rest.UYHproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UYHupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.NNNproxy> NNNfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NNNfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.NNNproxy> NNNfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_NNNfill, null, options, request);
      }
      public virtual global::Rest.NNNproxy NNNupdate(global::Rest.NNNproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NNNupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.NNNproxy NNNupdate(global::Rest.NNNproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_NNNupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.NNNproxy> NNNupdateAsync(global::Rest.NNNproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NNNupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.NNNproxy> NNNupdateAsync(global::Rest.NNNproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_NNNupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.NeTreeProxy> NeUpFill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NeUpFill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.NeTreeProxy> NeUpFill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_NeUpFill, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.NeTreeProxy> NeDownFill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NeDownFill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.NeTreeProxy> NeDownFill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_NeDownFill, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.KidsInParentsProxy> KidsInParentsFill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KidsInParentsFill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.KidsInParentsProxy> KidsInParentsFill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_KidsInParentsFill, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.NodesInParentsProxy> NodesInParentsFill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NodesInParentsFill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.NodesInParentsProxy> NodesInParentsFill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_NodesInParentsFill, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.KKKproxy> KKKfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KKKfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.KKKproxy> KKKfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_KKKfill, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.KFTproxy> KFTfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KFTfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.KFTproxy> KFTfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_KFTfill, null, options, request);
      }
      public virtual global::Rest.KFTproxy KFTupdate(global::Rest.KFTproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KFTupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.KFTproxy KFTupdate(global::Rest.KFTproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_KFTupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.KFTproxy> KFTupdateAsync(global::Rest.KFTproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KFTupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.KFTproxy> KFTupdateAsync(global::Rest.KFTproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_KFTupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.KPTproxy> KPTfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KPTfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.KPTproxy> KPTfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_KPTfill, null, options, request);
      }
      public virtual global::Rest.KPTproxy KPTupdate(global::Rest.KPTproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KPTupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.KPTproxy KPTupdate(global::Rest.KPTproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_KPTupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.KPTproxy> KPTupdateAsync(global::Rest.KPTproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KPTupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.KPTproxy> KPTupdateAsync(global::Rest.KPTproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_KPTupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.KDTproxy> KDTfill(global::Rest.QryProxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KDTfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.KDTproxy> KDTfill(global::Rest.QryProxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_KDTfill, null, options, request);
      }
      public virtual global::Rest.KDTproxy KDTupdate(global::Rest.KDTproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KDTupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.KDTproxy KDTupdate(global::Rest.KDTproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_KDTupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.KDTproxy> KDTupdateAsync(global::Rest.KDTproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return KDTupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.KDTproxy> KDTupdateAsync(global::Rest.KDTproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_KDTupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.BRproxy> BRfill(global::Rest.QryBRproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BRfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.BRproxy> BRfill(global::Rest.QryBRproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_BRfill, null, options, request);
      }
      public virtual global::Rest.BRproxy BRupdate(global::Rest.BRproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BRupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.BRproxy BRupdate(global::Rest.BRproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BRupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.BRproxy> BRupdateAsync(global::Rest.BRproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BRupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.BRproxy> BRupdateAsync(global::Rest.BRproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BRupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.ToKPTproxy> ToKPTfill(global::Rest.QryPproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ToKPTfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.ToKPTproxy> ToKPTfill(global::Rest.QryPproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ToKPTfill, null, options, request);
      }
      public virtual global::Rest.ToKPTproxy ToKPTupdate(global::Rest.ToKPTproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ToKPTupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.ToKPTproxy ToKPTupdate(global::Rest.ToKPTproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ToKPTupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.ToKPTproxy> ToKPTupdateAsync(global::Rest.ToKPTproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ToKPTupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.ToKPTproxy> ToKPTupdateAsync(global::Rest.ToKPTproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ToKPTupdate, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.ToKDTproxy> ToKDTfill(global::Rest.QryPproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ToKDTfill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Rest.ToKDTproxy> ToKDTfill(global::Rest.QryPproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ToKDTfill, null, options, request);
      }
      public virtual global::Rest.ToKDTproxy ToKDTupdate(global::Rest.ToKDTproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ToKDTupdate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Rest.ToKDTproxy ToKDTupdate(global::Rest.ToKDTproxy request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ToKDTupdate, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.ToKDTproxy> ToKDTupdateAsync(global::Rest.ToKDTproxy request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ToKDTupdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Rest.ToKDTproxy> ToKDTupdateAsync(global::Rest.ToKDTproxy request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ToKDTupdate, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CRUDsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CRUDsClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(CRUDsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_TblaFill, serviceImpl.TblaFill)
          .AddMethod(__Method_TblaUpdate, serviceImpl.TblaUpdate)
          .AddMethod(__Method_AHPfill, serviceImpl.AHPfill)
          .AddMethod(__Method_AHPupdate, serviceImpl.AHPupdate)
          .AddMethod(__Method_AFBfill, serviceImpl.AFBfill)
          .AddMethod(__Method_AFBupdate, serviceImpl.AFBupdate)
          .AddMethod(__Method_AFBgetByPK, serviceImpl.AFBgetByPK)
          .AddMethod(__Method_AFDfill, serviceImpl.AFDfill)
          .AddMethod(__Method_AFDupdate, serviceImpl.AFDupdate)
          .AddMethod(__Method_ABBfill, serviceImpl.ABBfill)
          .AddMethod(__Method_ABBupdate, serviceImpl.ABBupdate)
          .AddMethod(__Method_ABDfill, serviceImpl.ABDfill)
          .AddMethod(__Method_ABDupdate, serviceImpl.ABDupdate)
          .AddMethod(__Method_XGTfill, serviceImpl.XGTfill)
          .AddMethod(__Method_XGTupdate, serviceImpl.XGTupdate)
          .AddMethod(__Method_XDKfill, serviceImpl.XDKfill)
          .AddMethod(__Method_XDKupdate, serviceImpl.XDKupdate)
          .AddMethod(__Method_UUUfill, serviceImpl.UUUfill)
          .AddMethod(__Method_UUUupdate, serviceImpl.UUUupdate)
          .AddMethod(__Method_UYTfill, serviceImpl.UYTfill)
          .AddMethod(__Method_UYTupdate, serviceImpl.UYTupdate)
          .AddMethod(__Method_UYHfill, serviceImpl.UYHfill)
          .AddMethod(__Method_UYHupdate, serviceImpl.UYHupdate)
          .AddMethod(__Method_NNNfill, serviceImpl.NNNfill)
          .AddMethod(__Method_NNNupdate, serviceImpl.NNNupdate)
          .AddMethod(__Method_NeUpFill, serviceImpl.NeUpFill)
          .AddMethod(__Method_NeDownFill, serviceImpl.NeDownFill)
          .AddMethod(__Method_KidsInParentsFill, serviceImpl.KidsInParentsFill)
          .AddMethod(__Method_NodesInParentsFill, serviceImpl.NodesInParentsFill)
          .AddMethod(__Method_KKKfill, serviceImpl.KKKfill)
          .AddMethod(__Method_KFTfill, serviceImpl.KFTfill)
          .AddMethod(__Method_KFTupdate, serviceImpl.KFTupdate)
          .AddMethod(__Method_KPTfill, serviceImpl.KPTfill)
          .AddMethod(__Method_KPTupdate, serviceImpl.KPTupdate)
          .AddMethod(__Method_KDTfill, serviceImpl.KDTfill)
          .AddMethod(__Method_KDTupdate, serviceImpl.KDTupdate)
          .AddMethod(__Method_BRfill, serviceImpl.BRfill)
          .AddMethod(__Method_BRupdate, serviceImpl.BRupdate)
          .AddMethod(__Method_ToKPTfill, serviceImpl.ToKPTfill)
          .AddMethod(__Method_ToKPTupdate, serviceImpl.ToKPTupdate)
          .AddMethod(__Method_ToKDTfill, serviceImpl.ToKDTfill)
          .AddMethod(__Method_ToKDTupdate, serviceImpl.ToKDTupdate).Build();
    }

  }
}
#endregion
