// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/lookup.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rest {

  /// <summary>Holder for reflection information generated from protos/lookup.proto</summary>
  public static partial class LookupReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/lookup.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LookupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNwcm90b3MvbG9va3VwLnByb3RvEgRyZXN0IiEKEFF1ZXJ5TG9va3VwUHJv",
            "eHkSDQoFcXVlcnkYASABKAkiLQoFQmJNc2cSCgoCS2QYASABKAkSCgoCQWQY",
            "AiABKAkSDAoESW5mbxgDIAEoCSJSCg1CYkxvb2t1cFByb3h5Eg4KBlJvd0tl",
            "eRgBIAEoBBILCgNUeXAYAiABKAkSCgoCS2QYAyABKAkSCgoCQWQYBCABKAkS",
            "DAoESW5mbxgFIAEoCSI5Cg5LZHRMb29rdXBQcm94eRIOCgZSb3dLZXkYASAB",
            "KAQSFwoCQkIYAiABKAsyCy5yZXN0LkJiTXNnIjkKDktmdExvb2t1cFByb3h5",
            "Eg4KBlJvd0tleRgBIAEoBBIXCgJCQhgCIAEoCzILLnJlc3QuQmJNc2ciOQoO",
            "S3B0TG9va3VwUHJveHkSDgoGUm93S2V5GAEgASgEEhcKAkJCGAIgASgLMgsu",
            "cmVzdC5CYk1zZyI5Cg5ObnRMb29rdXBQcm94eRIOCgZSb3dLZXkYASABKAQS",
            "FwoCQkIYAiABKAsyCy5yZXN0LkJiTXNnImAKDkFocExvb2t1cFByb3h5Eg4K",
            "BlJvd0tleRgBIAEoBBIXCgJCQhgCIAEoCzILLnJlc3QuQmJNc2cSDQoFSHNw",
            "Tm8YAyABKAkSCQoBUBgEIAEoBBILCgNJc1cYBSABKAgiOQoOQXZrTG9va3Vw",
            "UHJveHkSDgoGUm93S2V5GAEgASgEEhcKAkJCGAIgASgLMgsucmVzdC5CYk1z",
            "ZyI5Cg5BYmtMb29rdXBQcm94eRIOCgZSb3dLZXkYASABKAQSFwoCQkIYAiAB",
            "KAsyCy5yZXN0LkJiTXNnIkYKDlhndExvb2t1cFByb3h5Eg4KBlJvd0tleRgB",
            "IAEoBBIXCgJCQhgCIAEoCzILLnJlc3QuQmJNc2cSCwoDUEtkGAMgASgJMpcE",
            "Cg1Mb29rdXBTZXJ2aWNlEjYKA0JiTBIWLnJlc3QuUXVlcnlMb29rdXBQcm94",
            "eRoTLnJlc3QuQmJMb29rdXBQcm94eSIAMAESOAoES2R0TBIWLnJlc3QuUXVl",
            "cnlMb29rdXBQcm94eRoULnJlc3QuS2R0TG9va3VwUHJveHkiADABEjgKBEtm",
            "dEwSFi5yZXN0LlF1ZXJ5TG9va3VwUHJveHkaFC5yZXN0LktmdExvb2t1cFBy",
            "b3h5IgAwARI4CgRLcHRMEhYucmVzdC5RdWVyeUxvb2t1cFByb3h5GhQucmVz",
            "dC5LcHRMb29rdXBQcm94eSIAMAESOAoETm50TBIWLnJlc3QuUXVlcnlMb29r",
            "dXBQcm94eRoULnJlc3QuTm50TG9va3VwUHJveHkiADABEjgKBEFocEwSFi5y",
            "ZXN0LlF1ZXJ5TG9va3VwUHJveHkaFC5yZXN0LkFocExvb2t1cFByb3h5IgAw",
            "ARI4CgRBdmtMEhYucmVzdC5RdWVyeUxvb2t1cFByb3h5GhQucmVzdC5BdmtM",
            "b29rdXBQcm94eSIAMAESOAoEQWJrTBIWLnJlc3QuUXVlcnlMb29rdXBQcm94",
            "eRoULnJlc3QuQWJrTG9va3VwUHJveHkiADABEjgKBFhndEwSFi5yZXN0LlF1",
            "ZXJ5TG9va3VwUHJveHkaFC5yZXN0LlhndExvb2t1cFByb3h5IgAwAWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rest.QueryLookupProxy), global::Rest.QueryLookupProxy.Parser, new[]{ "Query" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rest.BbMsg), global::Rest.BbMsg.Parser, new[]{ "Kd", "Ad", "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rest.BbLookupProxy), global::Rest.BbLookupProxy.Parser, new[]{ "RowKey", "Typ", "Kd", "Ad", "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rest.KdtLookupProxy), global::Rest.KdtLookupProxy.Parser, new[]{ "RowKey", "BB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rest.KftLookupProxy), global::Rest.KftLookupProxy.Parser, new[]{ "RowKey", "BB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rest.KptLookupProxy), global::Rest.KptLookupProxy.Parser, new[]{ "RowKey", "BB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rest.NntLookupProxy), global::Rest.NntLookupProxy.Parser, new[]{ "RowKey", "BB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rest.AhpLookupProxy), global::Rest.AhpLookupProxy.Parser, new[]{ "RowKey", "BB", "HspNo", "P", "IsW" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rest.AvkLookupProxy), global::Rest.AvkLookupProxy.Parser, new[]{ "RowKey", "BB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rest.AbkLookupProxy), global::Rest.AbkLookupProxy.Parser, new[]{ "RowKey", "BB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rest.XgtLookupProxy), global::Rest.XgtLookupProxy.Parser, new[]{ "RowKey", "BB", "PKd" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class QueryLookupProxy : pb::IMessage<QueryLookupProxy> {
    private static readonly pb::MessageParser<QueryLookupProxy> _parser = new pb::MessageParser<QueryLookupProxy>(() => new QueryLookupProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryLookupProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rest.LookupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryLookupProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryLookupProxy(QueryLookupProxy other) : this() {
      query_ = other.query_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryLookupProxy Clone() {
      return new QueryLookupProxy(this);
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 1;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryLookupProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryLookupProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Query != other.Query) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Query.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Query);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryLookupProxy other) {
      if (other == null) {
        return;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Query = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BbMsg : pb::IMessage<BbMsg> {
    private static readonly pb::MessageParser<BbMsg> _parser = new pb::MessageParser<BbMsg>(() => new BbMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BbMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rest.LookupReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BbMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BbMsg(BbMsg other) : this() {
      kd_ = other.kd_;
      ad_ = other.ad_;
      info_ = other.info_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BbMsg Clone() {
      return new BbMsg(this);
    }

    /// <summary>Field number for the "Kd" field.</summary>
    public const int KdFieldNumber = 1;
    private string kd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Kd {
      get { return kd_; }
      set {
        kd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ad" field.</summary>
    public const int AdFieldNumber = 2;
    private string ad_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ad {
      get { return ad_; }
      set {
        ad_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 3;
    private string info_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Info {
      get { return info_; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BbMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BbMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Kd != other.Kd) return false;
      if (Ad != other.Ad) return false;
      if (Info != other.Info) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Kd.Length != 0) hash ^= Kd.GetHashCode();
      if (Ad.Length != 0) hash ^= Ad.GetHashCode();
      if (Info.Length != 0) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Kd.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kd);
      }
      if (Ad.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ad);
      }
      if (Info.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Kd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kd);
      }
      if (Ad.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ad);
      }
      if (Info.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BbMsg other) {
      if (other == null) {
        return;
      }
      if (other.Kd.Length != 0) {
        Kd = other.Kd;
      }
      if (other.Ad.Length != 0) {
        Ad = other.Ad;
      }
      if (other.Info.Length != 0) {
        Info = other.Info;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Kd = input.ReadString();
            break;
          }
          case 18: {
            Ad = input.ReadString();
            break;
          }
          case 26: {
            Info = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BbLookupProxy : pb::IMessage<BbLookupProxy> {
    private static readonly pb::MessageParser<BbLookupProxy> _parser = new pb::MessageParser<BbLookupProxy>(() => new BbLookupProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BbLookupProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rest.LookupReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BbLookupProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BbLookupProxy(BbLookupProxy other) : this() {
      rowKey_ = other.rowKey_;
      typ_ = other.typ_;
      kd_ = other.kd_;
      ad_ = other.ad_;
      info_ = other.info_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BbLookupProxy Clone() {
      return new BbLookupProxy(this);
    }

    /// <summary>Field number for the "RowKey" field.</summary>
    public const int RowKeyFieldNumber = 1;
    private ulong rowKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RowKey {
      get { return rowKey_; }
      set {
        rowKey_ = value;
      }
    }

    /// <summary>Field number for the "Typ" field.</summary>
    public const int TypFieldNumber = 2;
    private string typ_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Typ {
      get { return typ_; }
      set {
        typ_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Kd" field.</summary>
    public const int KdFieldNumber = 3;
    private string kd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Kd {
      get { return kd_; }
      set {
        kd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ad" field.</summary>
    public const int AdFieldNumber = 4;
    private string ad_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ad {
      get { return ad_; }
      set {
        ad_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 5;
    private string info_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Info {
      get { return info_; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BbLookupProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BbLookupProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowKey != other.RowKey) return false;
      if (Typ != other.Typ) return false;
      if (Kd != other.Kd) return false;
      if (Ad != other.Ad) return false;
      if (Info != other.Info) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowKey != 0UL) hash ^= RowKey.GetHashCode();
      if (Typ.Length != 0) hash ^= Typ.GetHashCode();
      if (Kd.Length != 0) hash ^= Kd.GetHashCode();
      if (Ad.Length != 0) hash ^= Ad.GetHashCode();
      if (Info.Length != 0) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RowKey != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RowKey);
      }
      if (Typ.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Typ);
      }
      if (Kd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Kd);
      }
      if (Ad.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Ad);
      }
      if (Info.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowKey != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RowKey);
      }
      if (Typ.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Typ);
      }
      if (Kd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kd);
      }
      if (Ad.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ad);
      }
      if (Info.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BbLookupProxy other) {
      if (other == null) {
        return;
      }
      if (other.RowKey != 0UL) {
        RowKey = other.RowKey;
      }
      if (other.Typ.Length != 0) {
        Typ = other.Typ;
      }
      if (other.Kd.Length != 0) {
        Kd = other.Kd;
      }
      if (other.Ad.Length != 0) {
        Ad = other.Ad;
      }
      if (other.Info.Length != 0) {
        Info = other.Info;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RowKey = input.ReadUInt64();
            break;
          }
          case 18: {
            Typ = input.ReadString();
            break;
          }
          case 26: {
            Kd = input.ReadString();
            break;
          }
          case 34: {
            Ad = input.ReadString();
            break;
          }
          case 42: {
            Info = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KdtLookupProxy : pb::IMessage<KdtLookupProxy> {
    private static readonly pb::MessageParser<KdtLookupProxy> _parser = new pb::MessageParser<KdtLookupProxy>(() => new KdtLookupProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KdtLookupProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rest.LookupReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KdtLookupProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KdtLookupProxy(KdtLookupProxy other) : this() {
      rowKey_ = other.rowKey_;
      BB = other.bB_ != null ? other.BB.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KdtLookupProxy Clone() {
      return new KdtLookupProxy(this);
    }

    /// <summary>Field number for the "RowKey" field.</summary>
    public const int RowKeyFieldNumber = 1;
    private ulong rowKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RowKey {
      get { return rowKey_; }
      set {
        rowKey_ = value;
      }
    }

    /// <summary>Field number for the "BB" field.</summary>
    public const int BBFieldNumber = 2;
    private global::Rest.BbMsg bB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rest.BbMsg BB {
      get { return bB_; }
      set {
        bB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KdtLookupProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KdtLookupProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowKey != other.RowKey) return false;
      if (!object.Equals(BB, other.BB)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowKey != 0UL) hash ^= RowKey.GetHashCode();
      if (bB_ != null) hash ^= BB.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RowKey != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RowKey);
      }
      if (bB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BB);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowKey != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RowKey);
      }
      if (bB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BB);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KdtLookupProxy other) {
      if (other == null) {
        return;
      }
      if (other.RowKey != 0UL) {
        RowKey = other.RowKey;
      }
      if (other.bB_ != null) {
        if (bB_ == null) {
          bB_ = new global::Rest.BbMsg();
        }
        BB.MergeFrom(other.BB);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RowKey = input.ReadUInt64();
            break;
          }
          case 18: {
            if (bB_ == null) {
              bB_ = new global::Rest.BbMsg();
            }
            input.ReadMessage(bB_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KftLookupProxy : pb::IMessage<KftLookupProxy> {
    private static readonly pb::MessageParser<KftLookupProxy> _parser = new pb::MessageParser<KftLookupProxy>(() => new KftLookupProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KftLookupProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rest.LookupReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KftLookupProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KftLookupProxy(KftLookupProxy other) : this() {
      rowKey_ = other.rowKey_;
      BB = other.bB_ != null ? other.BB.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KftLookupProxy Clone() {
      return new KftLookupProxy(this);
    }

    /// <summary>Field number for the "RowKey" field.</summary>
    public const int RowKeyFieldNumber = 1;
    private ulong rowKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RowKey {
      get { return rowKey_; }
      set {
        rowKey_ = value;
      }
    }

    /// <summary>Field number for the "BB" field.</summary>
    public const int BBFieldNumber = 2;
    private global::Rest.BbMsg bB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rest.BbMsg BB {
      get { return bB_; }
      set {
        bB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KftLookupProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KftLookupProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowKey != other.RowKey) return false;
      if (!object.Equals(BB, other.BB)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowKey != 0UL) hash ^= RowKey.GetHashCode();
      if (bB_ != null) hash ^= BB.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RowKey != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RowKey);
      }
      if (bB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BB);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowKey != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RowKey);
      }
      if (bB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BB);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KftLookupProxy other) {
      if (other == null) {
        return;
      }
      if (other.RowKey != 0UL) {
        RowKey = other.RowKey;
      }
      if (other.bB_ != null) {
        if (bB_ == null) {
          bB_ = new global::Rest.BbMsg();
        }
        BB.MergeFrom(other.BB);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RowKey = input.ReadUInt64();
            break;
          }
          case 18: {
            if (bB_ == null) {
              bB_ = new global::Rest.BbMsg();
            }
            input.ReadMessage(bB_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KptLookupProxy : pb::IMessage<KptLookupProxy> {
    private static readonly pb::MessageParser<KptLookupProxy> _parser = new pb::MessageParser<KptLookupProxy>(() => new KptLookupProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KptLookupProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rest.LookupReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KptLookupProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KptLookupProxy(KptLookupProxy other) : this() {
      rowKey_ = other.rowKey_;
      BB = other.bB_ != null ? other.BB.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KptLookupProxy Clone() {
      return new KptLookupProxy(this);
    }

    /// <summary>Field number for the "RowKey" field.</summary>
    public const int RowKeyFieldNumber = 1;
    private ulong rowKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RowKey {
      get { return rowKey_; }
      set {
        rowKey_ = value;
      }
    }

    /// <summary>Field number for the "BB" field.</summary>
    public const int BBFieldNumber = 2;
    private global::Rest.BbMsg bB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rest.BbMsg BB {
      get { return bB_; }
      set {
        bB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KptLookupProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KptLookupProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowKey != other.RowKey) return false;
      if (!object.Equals(BB, other.BB)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowKey != 0UL) hash ^= RowKey.GetHashCode();
      if (bB_ != null) hash ^= BB.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RowKey != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RowKey);
      }
      if (bB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BB);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowKey != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RowKey);
      }
      if (bB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BB);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KptLookupProxy other) {
      if (other == null) {
        return;
      }
      if (other.RowKey != 0UL) {
        RowKey = other.RowKey;
      }
      if (other.bB_ != null) {
        if (bB_ == null) {
          bB_ = new global::Rest.BbMsg();
        }
        BB.MergeFrom(other.BB);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RowKey = input.ReadUInt64();
            break;
          }
          case 18: {
            if (bB_ == null) {
              bB_ = new global::Rest.BbMsg();
            }
            input.ReadMessage(bB_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NntLookupProxy : pb::IMessage<NntLookupProxy> {
    private static readonly pb::MessageParser<NntLookupProxy> _parser = new pb::MessageParser<NntLookupProxy>(() => new NntLookupProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NntLookupProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rest.LookupReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NntLookupProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NntLookupProxy(NntLookupProxy other) : this() {
      rowKey_ = other.rowKey_;
      BB = other.bB_ != null ? other.BB.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NntLookupProxy Clone() {
      return new NntLookupProxy(this);
    }

    /// <summary>Field number for the "RowKey" field.</summary>
    public const int RowKeyFieldNumber = 1;
    private ulong rowKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RowKey {
      get { return rowKey_; }
      set {
        rowKey_ = value;
      }
    }

    /// <summary>Field number for the "BB" field.</summary>
    public const int BBFieldNumber = 2;
    private global::Rest.BbMsg bB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rest.BbMsg BB {
      get { return bB_; }
      set {
        bB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NntLookupProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NntLookupProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowKey != other.RowKey) return false;
      if (!object.Equals(BB, other.BB)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowKey != 0UL) hash ^= RowKey.GetHashCode();
      if (bB_ != null) hash ^= BB.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RowKey != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RowKey);
      }
      if (bB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BB);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowKey != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RowKey);
      }
      if (bB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BB);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NntLookupProxy other) {
      if (other == null) {
        return;
      }
      if (other.RowKey != 0UL) {
        RowKey = other.RowKey;
      }
      if (other.bB_ != null) {
        if (bB_ == null) {
          bB_ = new global::Rest.BbMsg();
        }
        BB.MergeFrom(other.BB);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RowKey = input.ReadUInt64();
            break;
          }
          case 18: {
            if (bB_ == null) {
              bB_ = new global::Rest.BbMsg();
            }
            input.ReadMessage(bB_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AhpLookupProxy : pb::IMessage<AhpLookupProxy> {
    private static readonly pb::MessageParser<AhpLookupProxy> _parser = new pb::MessageParser<AhpLookupProxy>(() => new AhpLookupProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AhpLookupProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rest.LookupReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AhpLookupProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AhpLookupProxy(AhpLookupProxy other) : this() {
      rowKey_ = other.rowKey_;
      BB = other.bB_ != null ? other.BB.Clone() : null;
      hspNo_ = other.hspNo_;
      p_ = other.p_;
      isW_ = other.isW_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AhpLookupProxy Clone() {
      return new AhpLookupProxy(this);
    }

    /// <summary>Field number for the "RowKey" field.</summary>
    public const int RowKeyFieldNumber = 1;
    private ulong rowKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RowKey {
      get { return rowKey_; }
      set {
        rowKey_ = value;
      }
    }

    /// <summary>Field number for the "BB" field.</summary>
    public const int BBFieldNumber = 2;
    private global::Rest.BbMsg bB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rest.BbMsg BB {
      get { return bB_; }
      set {
        bB_ = value;
      }
    }

    /// <summary>Field number for the "HspNo" field.</summary>
    public const int HspNoFieldNumber = 3;
    private string hspNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HspNo {
      get { return hspNo_; }
      set {
        hspNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "P" field.</summary>
    public const int PFieldNumber = 4;
    private ulong p_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong P {
      get { return p_; }
      set {
        p_ = value;
      }
    }

    /// <summary>Field number for the "IsW" field.</summary>
    public const int IsWFieldNumber = 5;
    private bool isW_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsW {
      get { return isW_; }
      set {
        isW_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AhpLookupProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AhpLookupProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowKey != other.RowKey) return false;
      if (!object.Equals(BB, other.BB)) return false;
      if (HspNo != other.HspNo) return false;
      if (P != other.P) return false;
      if (IsW != other.IsW) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowKey != 0UL) hash ^= RowKey.GetHashCode();
      if (bB_ != null) hash ^= BB.GetHashCode();
      if (HspNo.Length != 0) hash ^= HspNo.GetHashCode();
      if (P != 0UL) hash ^= P.GetHashCode();
      if (IsW != false) hash ^= IsW.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RowKey != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RowKey);
      }
      if (bB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BB);
      }
      if (HspNo.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HspNo);
      }
      if (P != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(P);
      }
      if (IsW != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsW);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowKey != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RowKey);
      }
      if (bB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BB);
      }
      if (HspNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HspNo);
      }
      if (P != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(P);
      }
      if (IsW != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AhpLookupProxy other) {
      if (other == null) {
        return;
      }
      if (other.RowKey != 0UL) {
        RowKey = other.RowKey;
      }
      if (other.bB_ != null) {
        if (bB_ == null) {
          bB_ = new global::Rest.BbMsg();
        }
        BB.MergeFrom(other.BB);
      }
      if (other.HspNo.Length != 0) {
        HspNo = other.HspNo;
      }
      if (other.P != 0UL) {
        P = other.P;
      }
      if (other.IsW != false) {
        IsW = other.IsW;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RowKey = input.ReadUInt64();
            break;
          }
          case 18: {
            if (bB_ == null) {
              bB_ = new global::Rest.BbMsg();
            }
            input.ReadMessage(bB_);
            break;
          }
          case 26: {
            HspNo = input.ReadString();
            break;
          }
          case 32: {
            P = input.ReadUInt64();
            break;
          }
          case 40: {
            IsW = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvkLookupProxy : pb::IMessage<AvkLookupProxy> {
    private static readonly pb::MessageParser<AvkLookupProxy> _parser = new pb::MessageParser<AvkLookupProxy>(() => new AvkLookupProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvkLookupProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rest.LookupReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvkLookupProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvkLookupProxy(AvkLookupProxy other) : this() {
      rowKey_ = other.rowKey_;
      BB = other.bB_ != null ? other.BB.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvkLookupProxy Clone() {
      return new AvkLookupProxy(this);
    }

    /// <summary>Field number for the "RowKey" field.</summary>
    public const int RowKeyFieldNumber = 1;
    private ulong rowKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RowKey {
      get { return rowKey_; }
      set {
        rowKey_ = value;
      }
    }

    /// <summary>Field number for the "BB" field.</summary>
    public const int BBFieldNumber = 2;
    private global::Rest.BbMsg bB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rest.BbMsg BB {
      get { return bB_; }
      set {
        bB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvkLookupProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvkLookupProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowKey != other.RowKey) return false;
      if (!object.Equals(BB, other.BB)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowKey != 0UL) hash ^= RowKey.GetHashCode();
      if (bB_ != null) hash ^= BB.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RowKey != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RowKey);
      }
      if (bB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BB);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowKey != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RowKey);
      }
      if (bB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BB);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvkLookupProxy other) {
      if (other == null) {
        return;
      }
      if (other.RowKey != 0UL) {
        RowKey = other.RowKey;
      }
      if (other.bB_ != null) {
        if (bB_ == null) {
          bB_ = new global::Rest.BbMsg();
        }
        BB.MergeFrom(other.BB);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RowKey = input.ReadUInt64();
            break;
          }
          case 18: {
            if (bB_ == null) {
              bB_ = new global::Rest.BbMsg();
            }
            input.ReadMessage(bB_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AbkLookupProxy : pb::IMessage<AbkLookupProxy> {
    private static readonly pb::MessageParser<AbkLookupProxy> _parser = new pb::MessageParser<AbkLookupProxy>(() => new AbkLookupProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AbkLookupProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rest.LookupReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbkLookupProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbkLookupProxy(AbkLookupProxy other) : this() {
      rowKey_ = other.rowKey_;
      BB = other.bB_ != null ? other.BB.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbkLookupProxy Clone() {
      return new AbkLookupProxy(this);
    }

    /// <summary>Field number for the "RowKey" field.</summary>
    public const int RowKeyFieldNumber = 1;
    private ulong rowKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RowKey {
      get { return rowKey_; }
      set {
        rowKey_ = value;
      }
    }

    /// <summary>Field number for the "BB" field.</summary>
    public const int BBFieldNumber = 2;
    private global::Rest.BbMsg bB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rest.BbMsg BB {
      get { return bB_; }
      set {
        bB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AbkLookupProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AbkLookupProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowKey != other.RowKey) return false;
      if (!object.Equals(BB, other.BB)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowKey != 0UL) hash ^= RowKey.GetHashCode();
      if (bB_ != null) hash ^= BB.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RowKey != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RowKey);
      }
      if (bB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BB);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowKey != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RowKey);
      }
      if (bB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BB);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AbkLookupProxy other) {
      if (other == null) {
        return;
      }
      if (other.RowKey != 0UL) {
        RowKey = other.RowKey;
      }
      if (other.bB_ != null) {
        if (bB_ == null) {
          bB_ = new global::Rest.BbMsg();
        }
        BB.MergeFrom(other.BB);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RowKey = input.ReadUInt64();
            break;
          }
          case 18: {
            if (bB_ == null) {
              bB_ = new global::Rest.BbMsg();
            }
            input.ReadMessage(bB_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class XgtLookupProxy : pb::IMessage<XgtLookupProxy> {
    private static readonly pb::MessageParser<XgtLookupProxy> _parser = new pb::MessageParser<XgtLookupProxy>(() => new XgtLookupProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XgtLookupProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rest.LookupReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XgtLookupProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XgtLookupProxy(XgtLookupProxy other) : this() {
      rowKey_ = other.rowKey_;
      BB = other.bB_ != null ? other.BB.Clone() : null;
      pKd_ = other.pKd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XgtLookupProxy Clone() {
      return new XgtLookupProxy(this);
    }

    /// <summary>Field number for the "RowKey" field.</summary>
    public const int RowKeyFieldNumber = 1;
    private ulong rowKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RowKey {
      get { return rowKey_; }
      set {
        rowKey_ = value;
      }
    }

    /// <summary>Field number for the "BB" field.</summary>
    public const int BBFieldNumber = 2;
    private global::Rest.BbMsg bB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rest.BbMsg BB {
      get { return bB_; }
      set {
        bB_ = value;
      }
    }

    /// <summary>Field number for the "PKd" field.</summary>
    public const int PKdFieldNumber = 3;
    private string pKd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PKd {
      get { return pKd_; }
      set {
        pKd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XgtLookupProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XgtLookupProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowKey != other.RowKey) return false;
      if (!object.Equals(BB, other.BB)) return false;
      if (PKd != other.PKd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowKey != 0UL) hash ^= RowKey.GetHashCode();
      if (bB_ != null) hash ^= BB.GetHashCode();
      if (PKd.Length != 0) hash ^= PKd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RowKey != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(RowKey);
      }
      if (bB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BB);
      }
      if (PKd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PKd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowKey != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RowKey);
      }
      if (bB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BB);
      }
      if (PKd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PKd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XgtLookupProxy other) {
      if (other == null) {
        return;
      }
      if (other.RowKey != 0UL) {
        RowKey = other.RowKey;
      }
      if (other.bB_ != null) {
        if (bB_ == null) {
          bB_ = new global::Rest.BbMsg();
        }
        BB.MergeFrom(other.BB);
      }
      if (other.PKd.Length != 0) {
        PKd = other.PKd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RowKey = input.ReadUInt64();
            break;
          }
          case 18: {
            if (bB_ == null) {
              bB_ = new global::Rest.BbMsg();
            }
            input.ReadMessage(bB_);
            break;
          }
          case 26: {
            PKd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
